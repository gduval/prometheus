apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
  labels:
    app: prometheus-postgres-exporter
  name: ai-postgres-exporter
  namespace: monitoring
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: prometheus-postgres-exporter
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cattle.io/timestamp: "2020-11-03T19:12:51Z"
        checksum/config: 5f65e3148975283b9e65353cb9a61e4445b230d0e5d953f1524a93299493b170
        field.cattle.io/ports: '[[{"containerPort":9187,"dnsName":"prod-ai-pg-exporter-prometheus-postgres-exporter","kind":"ClusterIP","name":"http","protocol":"TCP"}]]'
      creationTimestamp: null
      labels:
        app: prometheus-postgres-exporter
    spec:
      containers:
      - args:
        - --extend.query-path=/etc/config.yaml
        env:
        - name: DATA_SOURCE_URI
          value: ai-rds-master.internal.corescientific.com:5432/postgres?sslmode=disable
        - name: DATA_SOURCE_USER
          value: ai_prometheus
        - name: DATA_SOURCE_PASS
          valueFrom:
            secretKeyRef:
              key: data_source_password
              name: prod-ai-pg-exporter-prometheus-postgres-exporter
              optional: false
        image: wrouesnel/postgres_exporter:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: prometheus-postgres-exporter
        ports:
        - containerPort: 9187
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/config.yaml
          name: queries
          subPath: config.yaml
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: prod-ai-pg-exporter-prometheus-postgres-exporter
        name: queries
