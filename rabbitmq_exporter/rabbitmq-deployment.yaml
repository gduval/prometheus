apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: prometheus-rabbitmq-exporter
  name: prod-minder-rmq-exporter-prometheus-rabbitmq-exporter
  namespace: monitoring
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: prometheus-rabbitmq-exporter
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: prometheus-rabbitmq-exporter
        release: prod-minder-rmq-exporter
    spec:
      containers:
      - env:
        - name: RABBIT_URL
          value: http://prod-rabbitmq.internal.corescientific.com:15672
        - name: RABBIT_USER
          value: coresci
        - name: RABBIT_PASSWORD
          value: coresci
        - name: PUBLISH_PORT
          value: "9419"
        - name: LOG_LEVEL
          value: info
        - name: RABBIT_CAPABILITIES
          value: bert,no_sort
        - name: INCLUDE_QUEUES
          value: .*
        - name: INCLUDE_VHOST
          value: .*
        - name: SKIP_QUEUES
          value: ^$
        - name: SKIPVERIFY
          value: "true"
        - name: SKIP_VHOST
          value: ^$
        - name: RABBIT_EXPORTERS
          value: exchange,node,overview,queue
        - name: OUTPUT_FORMAT
          value: TTY
        - name: RABBIT_TIMEOUT
          value: "30"
        - name: MAX_QUEUES
          value: "0"
        image: kbudde/rabbitmq-exporter:v0.29.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: publish
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: prometheus-rabbitmq-exporter
        ports:
        - containerPort: 9419
          name: publish
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: publish
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 10002
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
